/*
   Source for the blc IdaPro plugin
   Copyright (c) 2022 Chris Eagle

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 2 of the License, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
   more details.

   You should have received a copy of the GNU General Public License along with
   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
   Place, Suite 330, Boston, MA 02111-1307 USA
*/

#ifndef __XML_TREE_H
#define __XML_TREE_H

#include <stdint.h>
#include <string>
#include <map>
#include <vector>
#include <iostream>

using std::map;
using std::string;
using std::vector;
using std::istream;

enum ast_tag_t {
    ast_tag_addr = 11,
    ast_tag_range = 12,
    ast_tag_rangelist = 13,
    ast_tag_register = 14,
    ast_tag_seqnum = 15,
    ast_tag_varnode = 16,
    ast_tag_address_shift_amount = 130,
    ast_tag_aggressivetrim = 131,
    ast_tag_compiler_spec = 132,
    ast_tag_data_space = 133,
    ast_tag_default_memory_blocks = 134,
    ast_tag_default_proto = 135,
    ast_tag_default_symbols = 136,
    ast_tag_eval_called_prototype = 137,
    ast_tag_eval_current_prototype = 138,
    ast_tag_experimental_rules = 139,
    ast_tag_flowoverridelist = 140,
    ast_tag_funcptr = 141,
    ast_tag_global = 142,
    ast_tag_incidentalcopy = 143,
    ast_tag_inferptrbounds = 144,
    ast_tag_modelalias = 145,
    ast_tag_nohighptr = 146,
    ast_tag_processor_spec = 147,
    ast_tag_programcounter = 148,
    ast_tag_properties = 149,
    ast_tag_property = 150,
    ast_tag_readonly = 151,
    ast_tag_register_data = 152,
    ast_tag_rule = 153,
    ast_tag_save_state = 154,
    ast_tag_segmented_address = 155,
    ast_tag_spacebase = 156,
    ast_tag_specextensions = 157,
    ast_tag_stackpointer = 158,
    ast_tag_volatile = 159,
    ast_tag_bhead = 102,
    ast_tag_block = 103,
    ast_tag_blockedge = 104,
    ast_tag_edge = 105,
    ast_tag_callgraph = 226,
    ast_tag_node = 227,
    ast_tag_comment = 86,
    ast_tag_commentdb = 87,
    ast_tag_text = 88,
    ast_tag_constantpool = 109,
    ast_tag_cpoolrec = 110,
    ast_tag_ref = 111,
    ast_tag_token = 112,
    ast_tag_collision = 67,
    ast_tag_db = 68,
    ast_tag_equatesymbol = 69,
    ast_tag_facetsymbol = 71,
    ast_tag_functionshell = 72,
    ast_tag_hash = 73,
    ast_tag_hole = 74,
    ast_tag_labelsym = 75,
    ast_tag_mapsym = 76,
    ast_tag_parent = 77,
    ast_tag_property_changepoint = 78,
    ast_tag_rangeequalssymbols = 79,
    ast_tag_scope = 80,
    ast_tag_symbollist = 81,
    ast_tag_group = 160,
    ast_tag_internallist = 161,
    ast_tag_killedbycall = 162,
    ast_tag_likelytrash = 163,
    ast_tag_localrange = 164,
    ast_tag_model = 165,
    ast_tag_param = 166,
    ast_tag_paramrange = 167,
    ast_tag_pentry = 168,
    ast_tag_prototype = 169,
    ast_tag_resolveprototype = 170,
    ast_tag_retparam = 171,
    ast_tag_returnsym = 172,
    ast_tag_unaffected = 173,
    ast_tag_ast = 115,
    ast_tag_function = 116,
    ast_tag_highlist = 117,
    ast_tag_jumptablelist = 118,
    ast_tag_varnodes = 119,
    ast_tag_context_data = 120,
    ast_tag_context_points = 121,
    ast_tag_context_pointset = 122,
    ast_tag_context_set = 123,
    ast_tag_set = 124,
    ast_tag_tracked_pointset = 125,
    ast_tag_tracked_set = 126,
    ast_tag_basicoverride = 211,
    ast_tag_dest = 212,
    ast_tag_jumptable = 213,
    ast_tag_loadtable = 214,
    ast_tag_normaddr = 215,
    ast_tag_normhash = 216,
    ast_tag_startval = 217,
    ast_tag_data = 1,
    ast_tag_input = 2,
    ast_tag_off = 3,
    ast_tag_output = 4,
    ast_tag_returnaddress = 5,
    ast_tag_symbol = 6,
    ast_tag_target = 7,
    ast_tag_val = 8,
    ast_tag_value = 9,
    ast_tag_void = 10,
    ast_tag_xmlunknown = 270,
    ast_tag_iop = 113,
    ast_tag_unimpl = 114,
    ast_tag_aliasblock = 174,
    ast_tag_allowcontextset = 175,
    ast_tag_analyzeforloops = 176,
    ast_tag_commentheader = 177,
    ast_tag_commentindent = 178,
    ast_tag_commentinstruction = 179,
    ast_tag_commentstyle = 180,
    ast_tag_conventionprinting = 181,
    ast_tag_currentaction = 182,
    ast_tag_defaultprototype = 183,
    ast_tag_errorreinterpreted = 184,
    ast_tag_errortoomanyinstructions = 185,
    ast_tag_errorunimplemented = 186,
    ast_tag_extrapop = 187,
    ast_tag_ignoreunimplemented = 188,
    ast_tag_indentincrement = 189,
    ast_tag_inferconstptr = 190,
    ast_tag_inline = 191,
    ast_tag_inplaceops = 192,
    ast_tag_integerformat = 193,
    ast_tag_jumpload = 194,
    ast_tag_maxinstruction = 195,
    ast_tag_maxlinewidth = 196,
    ast_tag_namespacestrategy = 197,
    ast_tag_nocastprinting = 198,
    ast_tag_noreturn = 199,
    ast_tag_nullprinting = 200,
    ast_tag_optionslist = 201,
    ast_tag_param1 = 202,
    ast_tag_param2 = 203,
    ast_tag_param3 = 204,
    ast_tag_protoeval = 205,
    ast_tag_setaction = 206,
    ast_tag_setlanguage = 207,
    ast_tag_structalign = 208,
    ast_tag_togglerule = 209,
    ast_tag_warning = 210,
    ast_tag_deadcodedelay = 218,
    ast_tag_flow = 219,
    ast_tag_forcegoto = 220,
    ast_tag_indirectoverride = 221,
    ast_tag_multistagejump = 222,
    ast_tag_override = 223,
    ast_tag_protooverride = 224,
    ast_tag_parammeasures = 106,
    ast_tag_proto = 107,
    ast_tag_rank = 108,
    ast_tag_addr_pcode = 89,
    ast_tag_body = 90,
    ast_tag_callfixup = 91,
    ast_tag_callotherfixup = 92,
    ast_tag_case_pcode = 93,
    ast_tag_context = 94,
    ast_tag_default_pcode = 95,
    ast_tag_inject = 96,
    ast_tag_injectdebug = 97,
    ast_tag_inst = 98,
    ast_tag_payload = 99,
    ast_tag_pcode = 100,
    ast_tag_size_pcode = 101,
    ast_tag_prefersplit = 225,
    ast_tag_break = 17,
    ast_tag_clang_document = 18,
    ast_tag_funcname = 19,
    ast_tag_funcproto = 20,
    ast_tag_label = 21,
    ast_tag_return_type = 22,
    ast_tag_statement = 23,
    ast_tag_syntax = 24,
    ast_tag_vardecl = 25,
    ast_tag_variable = 26,
    ast_tag_compiler = 232,
    ast_tag_description = 233,
    ast_tag_language = 234,
    ast_tag_language_definitions = 235,
    ast_tag_bytes = 83,
    ast_tag_string = 84,
    ast_tag_stringmanage = 85,
    ast_tag_op = 27,
    ast_tag_sleigh = 28,
    ast_tag_space = 29,
    ast_tag_spaceid = 30,
    ast_tag_spaces = 31,
    ast_tag_space_base = 32,
    ast_tag_space_other = 33,
    ast_tag_space_overlay = 34,
    ast_tag_space_unique = 35,
    ast_tag_truncate_space = 36,
    ast_tag_coretypes = 41,
    ast_tag_data_organization = 42,
    ast_tag_def = 43,
    ast_tag_entry = 47,
    ast_tag_enum = 48,
    ast_tag_field = 49,
    ast_tag_integer_size = 51,
    ast_tag_long_size = 54,
    ast_tag_size_alignment_map = 59,
    ast_tag_type = 60,
    ast_tag_typegrp = 62,
    ast_tag_typeref = 63,
    ast_tag_constresolve = 127,
    ast_tag_jumpassist = 128,
    ast_tag_segmentop = 129,
    ast_tag_high = 82,
    ast_tag_localdb = 228
};

enum attr_tag_t {
    attrib_first = 27,
    attrib_last = 28,
    attrib_uniq = 29,
    attrib_address = 148,
    attrib_adjustvma = 103,
    attrib_enable = 104,
    attrib_group = 105,
    attrib_growth = 106,
    attrib_key = 107,
    attrib_loadersymbols = 108,
    attrib_parent = 109,
    attrib_register = 110,
    attrib_reversejustify = 111,
    attrib_signext = 112,
    attrib_style = 113,
    attrib_altindex = 75,
    attrib_depth = 76,
    attrib_end = 77,
    attrib_opcode = 78,
    attrib_rev = 79,
    attrib_a = 80,
    attrib_b = 81,
    attrib_length = 82,
    attrib_tag = 83,
    attrib_cat = 61,
    attrib_field = 62,
    attrib_merge = 63,
    attrib_scopeidbyname = 64,
    attrib_volatile = 65,
    attrib_custom = 114,
    attrib_dotdotdot = 115,
    attrib_extension = 116,
    attrib_hasthis = 117,
    attrib_inline = 118,
    attrib_killedbycall = 119,
    attrib_maxsize = 120,
    attrib_minsize = 121,
    attrib_modellock = 122,
    attrib_noreturn = 123,
    attrib_pointermax = 124,
    attrib_separatefloat = 125,
    attrib_stackshift = 126,
    attrib_strategy = 127,
    attrib_thisbeforeretpointer = 128,
    attrib_voidlock = 129,
    attrib_nocode = 84,
    attrib_label = 131,
    attrib_num = 132,
    attrib_content = 1,
    attrib_align = 2,
    attrib_bigendian = 3,
    attrib_constructor = 4,
    attrib_destructor = 5,
    attrib_extrapop = 6,
    attrib_format = 7,
    attrib_hiddenretparm = 8,
    attrib_id = 9,
    attrib_index = 10,
    attrib_indirectstorage = 11,
    attrib_metatype = 12,
    attrib_model = 13,
    attrib_name = 14,
    attrib_namelock = 15,
    attrib_offset = 16,
    attrib_readonly = 17,
    attrib_ref = 18,
    attrib_size = 19,
    attrib_space = 20,
    attrib_thisptr = 21,
    attrib_type = 22,
    attrib_typelock = 23,
    attrib_val = 24,
    attrib_value = 25,
    attrib_wordsize = 26,
    attrib_unknown = 149,
    attrib_dynamic = 70,
    attrib_incidentalcopy = 71,
    attrib_inject = 72,
    attrib_paramshift = 73,
    attrib_targetop = 74,
    attrib_blockref = 35,
    attrib_close = 36,
    attrib_color = 37,
    attrib_indent = 38,
    attrib_off = 39,
    attrib_open = 40,
    attrib_opref = 41,
    attrib_varref = 42,
    attrib_deprecated = 136,
    attrib_endian = 137,
    attrib_processor = 138,
    attrib_processorspec = 139,
    attrib_slafile = 140,
    attrib_spec = 141,
    attrib_target = 142,
    attrib_variant = 143,
    attrib_version = 144,
    attrib_base = 89,
    attrib_deadcodedelay = 90,
    attrib_delay = 91,
    attrib_logicalsize = 92,
    attrib_physical = 93,
    attrib_piece1 = 94,
    attrib_piece2 = 95,
    attrib_piece3 = 96,
    attrib_piece4 = 97,
    attrib_piece5 = 98,
    attrib_piece6 = 99,
    attrib_piece7 = 100,
    attrib_piece8 = 101,
    attrib_piece9 = 102,
    attrib_trunc = 69,
    attrib_vector_lane_sizes = 130,
    attrib_code = 43,
    attrib_contain = 44,
    attrib_defaultspace = 45,
    attrib_uniqbase = 46,
    attrib_alignment = 47,
    attrib_arraysize = 48,
    attrib_char = 49,
    attrib_core = 50,
    attrib_enum = 51,
    attrib_enumsigned = 52,
    attrib_enumsize = 53,
    attrib_intsize = 54,
    attrib_longsize = 55,
    attrib_opaquestring = 56,
    attrib_signed = 57,
    attrib_structalign = 58,
    attrib_utf = 59,
    attrib_varlength = 60,
    attrib_farpointer = 85,
    attrib_inputop = 86,
    attrib_outputop = 87,
    attrib_userop = 88,
    attrib_class = 66,
    attrib_repref = 67,
    attrib_symref = 68,
    attrib_lock = 133,
    attrib_main = 134,
    attrib_addrtied = 30,
    attrib_grp = 31,
    attrib_input = 32,
    attrib_persists = 33,
    attrib_unaff = 34
};

struct XmlAttribute {
    uint32_t id;
    uint32_t type;
    uint64_t val;
    string content;

    XmlAttribute(uint32_t _id) : id(_id) {};
    XmlAttribute(uint32_t _id, uint32_t _type, uint64_t _val) : id(_id), type(_type), val(_val) {};
    XmlAttribute(uint32_t _id, uint32_t _type, const string & _content) : id(_id), type(_type), content(_content) {};

    const string &getContent() {return content;};
};

struct XmlElement;
typedef vector<XmlElement *> XmlList;		///< A list of XML elements

struct XmlElement {
    XmlList children;
    vector<XmlAttribute*> attributes;

    uint32_t tag;

    XmlElement(uint32_t _tag) : tag(_tag) {};
    ~XmlElement();
    void addChild(XmlElement *child) {children.push_back(child);};
    void addAttribute(XmlAttribute *attr) {attributes.push_back(attr);};
    XmlList &getChildren() {return children;};
    const string &getContent();
};

XmlElement *build_from_packed(istream &ifs);

void dump_tree(XmlElement *, uint32_t indent = 0);

#endif
